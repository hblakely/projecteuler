import java.math.BigInteger;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Problem12 {
    /*
    https://projecteuler.net/problem=12
    The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number
    would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

    Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
    We can see that 28 is the first triangle number to have over five divisors.

    What is the value of the first triangle number to have over five hundred divisors?
     */

    public static int highlyDivisibleTriangleNumber(int target){
        int num = 1, count =1, numFactors=0;
        while(true){
            numFactors=numFactors(num);
            if(numFactors > target) {
               /* System.out.println("numFactors: "+numFactors);
                System.out.println(count+"th triangle number:\t"+num);*/
                break;
            }
            count++;        // Triangle number
            num+=count;     // 1+2+3...
        }
        return num;
    }

    private static int numFactors(int num){ // For real-numbers only.
        int numFactors = 2;
        if(num==1)
            return num;
        for(int b = 2; b<Math.sqrt(num); b++) {
            if (num%b==0)
                numFactors+=2;
        }
        return numFactors;
    }

    public static void main(String[] args){
        int target = 500;
        System.out.println("More than "+target+" divisors: "+highlyDivisibleTriangleNumber(target));
    }

}
